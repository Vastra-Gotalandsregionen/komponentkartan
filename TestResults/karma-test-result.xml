<?xml version="1.0"?>
<testsuite name="Chrome Headless 99.0.4844.82 (Windows 10)" package="karma-test-result" timestamp="2022-03-24T06:26:41" id="0" hostname="W370366" tests="770" errors="0" failures="0" time="7.103">
  <properties>
    <property name="browser.fullName" value="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/99.0.4844.82 Safari/537.36"/>
  </properties>
  <testcase name="[DatepickerNewComponent - Angular] When header is clicked and calendar is expanded calendar is collapsed" time="0.131" classname=".[DatepickerNewComponent - Angular] When header is clicked and calendar is expanded"/>
  <testcase name="[DatepickerNewComponent - Angular] When header is clicked and calendar is collapsed and component is disabled calendar is not expanded" time="0.012" classname=".[DatepickerNewComponent - Angular] When header is clicked and calendar is collapsed and component is disabled"/>
  <testcase name="[DatepickerNewComponent - Angular] When header is clicked and calendar is collapsed and component is readonly calendar is not expanded" time="0.009" classname=".[DatepickerNewComponent - Angular] When header is clicked and calendar is collapsed and component is readonly"/>
  <testcase name="[DatepickerNewComponent - Angular] When header is clicked and calendar is collapsed calendar is expanded" time="0.046" classname=".[DatepickerNewComponent - Angular] When header is clicked and calendar is collapsed"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYMM month is selected" time="0.014" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYMM"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYYY MM month is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYYY MM"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format abreviated month YY month is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format abreviated month YY"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format abreviated month YYYY month is selected" time="0.008" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format abreviated month YYYY"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format month YY month is selected" time="0.008" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format month YY"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYYYMM month is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYYYMM"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YY-MM month is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YY-MM"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format month YYYY month is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format month YYYY"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYYY-MM month is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YYYY-MM"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YY MM month is selected" time="0.006" classname=".[DatepickerNewComponent - Angular] When min zoom is months and valid text is entered with format YY MM"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and next arrow is clicked next year is shown" time="0.034" classname=".[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and next arrow is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and month is clicked month is selected" time="0.02" classname=".[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and month is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and header is clicked and year is clicked months are shown" time="0.047" classname=".[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and header is clicked and year is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and header is clicked years are shown" time="0.041" classname=".[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and header is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and previous arrow is clicked previous year is shown" time="0.035" classname=".[DatepickerNewComponent - Angular] When min zoom is months and calendar is open and previous arrow is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and invalid text is entered error is shown" time="0.01" classname=".[DatepickerNewComponent - Angular] When min zoom is months and invalid text is entered"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is months and invalid text is entered no date is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is months and invalid text is entered"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYYY MM DD date is selected" time="0.006" classname=".[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYYY MM DD"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYYYMMDD date is selected" time="0.008" classname=".[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYYYMMDD"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YY MM DD date is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YY MM DD"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YY-MM-DD date is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YY-MM-DD"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYMMDD date is selected" time="0.008" classname=".[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYMMDD"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYYY-MM-DD date is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is days and valid text is entered with format YYYY-MM-DD"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and invalid text is entered no date is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is days and invalid text is entered"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and invalid text is entered error is shown" time="0.008" classname=".[DatepickerNewComponent - Angular] When min zoom is days and invalid text is entered"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and previous arrow is clicked previous month is shown" time="0.067" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and previous arrow is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and next arrow is clicked next month is shown" time="0.068" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and next arrow is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and date is clicked date is selected" time="0.035" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and date is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked and header is clicked and year is clicked months are shown" time="0.074" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked and header is clicked and year is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked and header is clicked years are shown" time="0.055" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked and header is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked and month is clicked days are shown" time="0.077" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked and month is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked months are shown" time="0.05" classname=".[DatepickerNewComponent - Angular] When min zoom is days and calendar is open and header is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and valid text is entered with format YY year is selected" time="0.008" classname=".[DatepickerNewComponent - Angular] When min zoom is years and valid text is entered with format YY"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and valid text is entered with format YYYY year is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is years and valid text is entered with format YYYY"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and calendar is open and next arrow is clicked next set of years are shown" time="0.025" classname=".[DatepickerNewComponent - Angular] When min zoom is years and calendar is open and next arrow is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and calendar is open and previous arrow is clicked previous set of years are shown" time="0.025" classname=".[DatepickerNewComponent - Angular] When min zoom is years and calendar is open and previous arrow is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and calendar is open and year is clicked year is selected" time="0.022" classname=".[DatepickerNewComponent - Angular] When min zoom is years and calendar is open and year is clicked"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and invalid text is entered no date is selected" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is years and invalid text is entered"/>
  <testcase name="[DatepickerNewComponent - Angular] When min zoom is years and invalid text is entered error is shown" time="0.007" classname=".[DatepickerNewComponent - Angular] When min zoom is years and invalid text is entered"/>
  <testcase name="[DatepickerNewComponent - Angular] should create" time="0.004" classname=".[DatepickerNewComponent - Angular]"/>
  <testcase name="[DatepickerItemComponent] Instatiate date is correct" time="0.001" classname=".[DatepickerItemComponent] Instatiate"/>
  <testcase name="[DatepickerItemComponent] Instatiate disabled is correct" time="0" classname=".[DatepickerItemComponent] Instatiate"/>
  <testcase name="[DatepickerItemComponent] Instatiate isMinZoom is correct" time="0" classname=".[DatepickerItemComponent] Instatiate"/>
  <testcase name="[DatepickerItemComponent] Instatiate type is correct" time="0" classname=".[DatepickerItemComponent] Instatiate"/>
  <testcase name="[DatepickerItemComponent] Instatiate selected is correct" time="0.001" classname=".[DatepickerItemComponent] Instatiate"/>
  <testcase name="[ActionPanelComponent] ngOnInit open is false isClosed is correct" time="0" classname=".[ActionPanelComponent] ngOnInit open is false"/>
  <testcase name="[ActionPanelComponent] ngOnInit open is false isOpened is correct" time="0" classname=".[ActionPanelComponent] ngOnInit open is false"/>
  <testcase name="[ActionPanelComponent] ngOnInit open is true isClosed is correct" time="0.002" classname=".[ActionPanelComponent] ngOnInit open is true"/>
  <testcase name="[ActionPanelComponent] ngOnInit open is true isOpened is correct" time="0" classname=".[ActionPanelComponent] ngOnInit open is true"/>
  <testcase name="[ActionPanelComponent] Instatiate showCloseButton is correct" time="0" classname=".[ActionPanelComponent] Instatiate"/>
  <testcase name="[ActionPanelComponent] Instatiate slideState is correct" time="0.001" classname=".[ActionPanelComponent] Instatiate"/>
  <testcase name="[ActionPanelComponent] Instatiate fadeState is correct" time="0.001" classname=".[ActionPanelComponent] Instatiate"/>
  <testcase name="[ActionPanelComponent] Instatiate title is correct" time="0.001" classname=".[ActionPanelComponent] Instatiate"/>
  <testcase name="[ActionPanelComponent] Instatiate open is correct" time="0" classname=".[ActionPanelComponent] Instatiate"/>
  <testcase name="[ActionPanelComponent] close open is correct" time="0" classname=".[ActionPanelComponent] close"/>
  <testcase name="[ActionPanelComponent] close slideState is correct" time="0.001" classname=".[ActionPanelComponent] close"/>
  <testcase name="[ActionPanelComponent] close event is emitted" time="0.003" classname=".[ActionPanelComponent] close"/>
  <testcase name="[ActionPanelComponent] onSlideStart from open isOpened is correct" time="0.001" classname=".[ActionPanelComponent] onSlideStart from open"/>
  <testcase name="[ActionPanelComponent] onSlideStart from closed isOpened is correct" time="0" classname=".[ActionPanelComponent] onSlideStart from closed"/>
  <testcase name="[ActionPanelComponent] onSlideEnd from closed isOpened is correct" time="0" classname=".[ActionPanelComponent] onSlideEnd from closed"/>
  <testcase name="[ActionPanelComponent] onSlideEnd from open isOpened is correct" time="0.001" classname=".[ActionPanelComponent] onSlideEnd from open"/>
  <testcase name="[ActionPanelComponent] ngOnChanges showCloseButton is changed to true fadeState is correct" time="0.001" classname=".[ActionPanelComponent] ngOnChanges showCloseButton is changed to true"/>
  <testcase name="[ActionPanelComponent] ngOnChanges showCloseButton is changed to false fadeState is correct" time="0" classname=".[ActionPanelComponent] ngOnChanges showCloseButton is changed to false"/>
  <testcase name="[ActionPanelComponent] ngOnChanges open is changed to false slideState is correct" time="0" classname=".[ActionPanelComponent] ngOnChanges open is changed to false"/>
  <testcase name="[ActionPanelComponent] ngOnChanges open is changed to false openChanged is emitted" time="0" classname=".[ActionPanelComponent] ngOnChanges open is changed to false"/>
  <testcase name="[ActionPanelComponent] ngOnChanges open is changed to true slideState is correct" time="0" classname=".[ActionPanelComponent] ngOnChanges open is changed to true"/>
  <testcase name="[ActionPanelComponent] ngOnChanges open is changed to true openChanged is emitted" time="0.003" classname=".[ActionPanelComponent] ngOnChanges open is changed to true"/>
  <testcase name="GridRowComponent should create" time="0.02" classname=".GridRowComponent"/>
  <testcase name="[MenuItemComponent] When component is initialized with a green notification the menu item title is set" time="0.019" classname=".[MenuItemComponent] When component is initialized with a green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a green notification the notification color class is correct" time="0.005" classname=".[MenuItemComponent] When component is initialized with a green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a green notification the notification color class is set" time="0.006" classname=".[MenuItemComponent] When component is initialized with a green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a green notification the notification text is &quot;69&quot;" time="0.004" classname=".[MenuItemComponent] When component is initialized with a green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a default notification the notification color class is set" time="0.005" classname=".[MenuItemComponent] When component is initialized with a default notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a default notification the notification color class is correct" time="0.004" classname=".[MenuItemComponent] When component is initialized with a default notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a red notification the notification text is &quot;2&quot;" time="0.005" classname=".[MenuItemComponent] When component is initialized with a red notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a red notification the notification tooltip text is correct" time="0.005" classname=".[MenuItemComponent] When component is initialized with a red notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a red notification the notification color class is correct" time="0.004" classname=".[MenuItemComponent] When component is initialized with a red notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a red notification the notification color class is set" time="0.004" classname=".[MenuItemComponent] When component is initialized with a red notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a red notification the menu item title is set" time="0.004" classname=".[MenuItemComponent] When component is initialized with a red notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a blue notification the notification color class is set" time="0.005" classname=".[MenuItemComponent] When component is initialized with a blue notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a blue notification the notification color class is correct" time="0.005" classname=".[MenuItemComponent] When component is initialized with a blue notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a success notification the notification color class is correct" time="0.006" classname=".[MenuItemComponent] When component is initialized with a success notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with a success notification the notification color class is set" time="0.004" classname=".[MenuItemComponent] When component is initialized with a success notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with an error notification of length 3 the notification color class is set" time="0.004" classname=".[MenuItemComponent] When component is initialized with an error notification of length 3"/>
  <testcase name="[MenuItemComponent] When component is initialized with an error notification of length 3 the notification color class is correct" time="0.004" classname=".[MenuItemComponent] When component is initialized with an error notification of length 3"/>
  <testcase name="[MenuItemComponent] When component is initialized with an error notification of length 3 the notification text is &quot;!&quot;" time="0.005" classname=".[MenuItemComponent] When component is initialized with an error notification of length 3"/>
  <testcase name="[MenuItemComponent] When component is initialized with a text no notification visible" time="0.004" classname=".[MenuItemComponent] When component is initialized with a text"/>
  <testcase name="[MenuItemComponent] When component is initialized with a text menuitem has role menuitem" time="0.005" classname=".[MenuItemComponent] When component is initialized with a text"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled disabled tooltip is set" time="0.006" classname=".[MenuItemComponent] When component is initialized with menu item is disabled"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled the menu item title is set" time="0.004" classname=".[MenuItemComponent] When component is initialized with menu item is disabled"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled and green notification the notification tooltip text is correct" time="0.005" classname=".[MenuItemComponent] When component is initialized with menu item is disabled and green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled and green notification the notification color class is set" time="0.006" classname=".[MenuItemComponent] When component is initialized with menu item is disabled and green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled and green notification the notification text is &quot;69&quot;" time="0.004" classname=".[MenuItemComponent] When component is initialized with menu item is disabled and green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled and green notification the notification color class is correct" time="0.004" classname=".[MenuItemComponent] When component is initialized with menu item is disabled and green notification"/>
  <testcase name="[MenuItemComponent] When component is initialized with menu item is disabled disabled class is set" time="0.003" classname=".[MenuItemComponent] When component is initialized with menu item is disabled"/>
  <testcase name="[DatepickerItemComponent - Angular] should create" time="0.003" classname=".[DatepickerItemComponent - Angular]"/>
  <testcase name="[ComboboxItemComponent - Angular] should create" time="0.01" classname=".[ComboboxItemComponent - Angular]"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is &lt;space> or Spacebar and multi is true and selected is true selected is set to false" time="0.001" classname=".[DropdownItemComponent] onKeydown When key is &lt;space> or Spacebar and multi is true and selected is true"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is &lt;space> or Spacebar and multi is true toggle is emitted" time="0.002" classname=".[DropdownItemComponent] onKeydown When key is &lt;space> or Spacebar and multi is true"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is &lt;space> or Spacebar and multi is true and selected is false selected is set to true" time="0" classname=".[DropdownItemComponent] onKeydown When key is &lt;space> or Spacebar and multi is true and selected is false"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is ArrowDown or Down next is emitted" time="0" classname=".[DropdownItemComponent] onKeydown When key is ArrowDown or Down"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is ArrowUp or Up previous is emitted" time="0.003" classname=".[DropdownItemComponent] onKeydown When key is ArrowUp or Up"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is Enter selected is set to true" time="0" classname=".[DropdownItemComponent] onKeydown When key is Enter"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is Enter confirm is emitted" time="0.001" classname=".[DropdownItemComponent] onKeydown When key is Enter"/>
  <testcase name="[DropdownItemComponent] onKeydown When key is word character nextMatch is emitted" time="0" classname=".[DropdownItemComponent] onKeydown When key is word character"/>
  <testcase name="[DropdownItemComponent] Instatiate selectedLabel is correct" time="0" classname=".[DropdownItemComponent] Instatiate"/>
  <testcase name="[DropdownItemComponent] Instatiate selected is correct" time="0.001" classname=".[DropdownItemComponent] Instatiate"/>
  <testcase name="[DropdownItemComponent] Instatiate visible is correct" time="0" classname=".[DropdownItemComponent] Instatiate"/>
  <testcase name="[DropdownItemComponent] Instatiate value is correct" time="0" classname=".[DropdownItemComponent] Instatiate"/>
  <testcase name="[DropdownItemComponent] Instatiate label is correct" time="0" classname=".[DropdownItemComponent] Instatiate"/>
  <testcase name="[DropdownItemComponent] Instatiate multi is correct" time="0" classname=".[DropdownItemComponent] Instatiate"/>
  <testcase name="[DropdownItemComponent] onBlur hasFocus is set to false" time="0" classname=".[DropdownItemComponent] onBlur"/>
  <testcase name="[DropdownItemComponent] onFocus hasFocus is set to true" time="0.001" classname=".[DropdownItemComponent] onFocus"/>
  <testcase name="[DropdownItemComponent] toggleSelect When multi is false confirm is emitted" time="0" classname=".[DropdownItemComponent] toggleSelect When multi is false"/>
  <testcase name="[DropdownItemComponent] toggleSelect When multi is false selected is set to true" time="0.003" classname=".[DropdownItemComponent] toggleSelect When multi is false"/>
  <testcase name="[DropdownItemComponent] toggleSelect When multi is true and selected is false selected is set to true" time="0" classname=".[DropdownItemComponent] toggleSelect When multi is true and selected is false"/>
  <testcase name="[DropdownItemComponent] toggleSelect When multi is true and selected is true selected is set to false" time="0" classname=".[DropdownItemComponent] toggleSelect When multi is true and selected is true"/>
  <testcase name="[DropdownItemComponent] toggleSelect When multi is true toggle is emitted" time="0" classname=".[DropdownItemComponent] toggleSelect When multi is true"/>
  <testcase name="[IconComponent] Instatiate border is correct" time="0" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate solid is correct" time="0" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate pulse is correct" time="0.001" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate color is correct" time="0" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate spin is correct" time="0" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate fixedWidth is correct" time="0.001" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate ariaLabel is correct" time="0" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate disabled is correct" time="0.002" classname=".[IconComponent] Instatiate"/>
  <testcase name="[IconComponent] Instatiate size is correct" time="0.001" classname=".[IconComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate selectedLabel is correct" time="0" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate value is correct" time="0.001" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate visible is correct" time="0" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate highlighted is correct" time="0" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate selected is correct" time="0" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate label is correct" time="0.001" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] Instatiate index is correct" time="0.002" classname=".[ComboboxItemComponent] Instatiate"/>
  <testcase name="[ComboboxItemComponent] select confirm is emitted" time="0" classname=".[ComboboxItemComponent] select"/>
  <testcase name="[ComboboxItemComponent] select selected is set to true" time="0" classname=".[ComboboxItemComponent] select"/>
  <testcase name="[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed menu is expanded" time="0.066" classname=".[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed"/>
  <testcase name="[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed event is emitted" time="0.018" classname=".[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed"/>
  <testcase name="[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed and component is disabled menu is not expanded" time="0.014" classname=".[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed and component is disabled"/>
  <testcase name="[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed and component is readonly menu is not expanded" time="0.016" classname=".[ComboboxComponent - Angular] When expand button is clicked and menu is collapsed and component is readonly"/>
  <testcase name="[ComboboxComponent - Angular] should create" time="0.014" classname=".[ComboboxComponent - Angular]"/>
  <testcase name="[ComboboxComponent - Angular] When an item is clicked label is set" time="0.025" classname=".[ComboboxComponent - Angular] When an item is clicked"/>
  <testcase name="[ComboboxComponent - Angular] When an item is clicked item is selected" time="0.023" classname=".[ComboboxComponent - Angular] When an item is clicked"/>
  <testcase name="[ComboboxComponent - Angular] When an item is clicked event is emitted" time="0.023" classname=".[ComboboxComponent - Angular] When an item is clicked"/>
  <testcase name="[ComboboxComponent - Angular] When an item is clicked value is set" time="0.024" classname=".[ComboboxComponent - Angular] When an item is clicked"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is ArrowUp or Up expandedChanged is emitted" time="0.022" classname=".[ComboboxComponent - Angular] onKeydown When key is ArrowUp or Up"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is ArrowUp or Up expanded to be true" time="0.021" classname=".[ComboboxComponent - Angular] onKeydown When key is ArrowUp or Up"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is ArrowUp or Up last item higlighted to be true" time="0.023" classname=".[ComboboxComponent - Angular] onKeydown When key is ArrowUp or Up"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item expandedChanged is emitted" time="0.027" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item selectedChanged is emitted" time="0.016" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item expanded to be false" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item the form value have the new value" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item the form value same as before" time="0.016" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item expanded to be false" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item confirm is emitted" time="0.016" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item selectedChanged is emitted" time="0.016" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is not empty and there is not any higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is empty expanded to be true" time="0.023" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is empty"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is empty confirm is emitted" time="0.022" classname=".[ComboboxComponent - Angular] onKeydown When key is Enter and searchstring is empty"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is word character and there are matching items or not expandedChanged is emitted" time="0.023" classname=".[ComboboxComponent - Angular] onKeydown When key is word character and there are matching items or not"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Tab or Shift + Tab and there are items or not expanded is false" time="0.014" classname=".[ComboboxComponent - Angular] onKeydown When key is Tab or Shift + Tab and there are items or not"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Tab or Shift + Tab and there are items or not expandedChanged is emitted" time="0.024" classname=".[ComboboxComponent - Angular] onKeydown When key is Tab or Shift + Tab and there are items or not"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is not null and there is a higlighted item expanded to be false" time="0.024" classname=".[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is not null and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is not null and there is a higlighted item the form value have the new value" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is not null and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is not null and there is a higlighted item confirm is emitted" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is not null and there is a higlighted item"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is null expanded to be true" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is null"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is null confirm is emitted" time="0.014" classname=".[ComboboxComponent - Angular] onKeydown When key is Escape or Esc and old value is null"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is ArrowDown or Down expandedChanged is emitted" time="0.021" classname=".[ComboboxComponent - Angular] onKeydown When key is ArrowDown or Down"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is ArrowDown or Down expanded to be true" time="0.023" classname=".[ComboboxComponent - Angular] onKeydown When key is ArrowDown or Down"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When key is ArrowDown or Down first item higlighted to be true" time="0.025" classname=".[ComboboxComponent - Angular] onKeydown When key is ArrowDown or Down"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowUp or Up expandedChanged is emitted" time="0.014" classname=".[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowUp or Up"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowUp or Up expanded to be fale" time="0.028" classname=".[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowUp or Up"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowUp or Up no visible items exists" time="0.015" classname=".[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowUp or Up"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowDown or Down there is not any item higlighted" time="0.025" classname=".[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowDown or Down"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowDown or Down expanded to be true" time="0.025" classname=".[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowDown or Down"/>
  <testcase name="[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowDown or Down expandedChanged is emitted" time="0.021" classname=".[ComboboxComponent - Angular] onKeydown When altKey + key is ArrowDown or Down"/>
  <testcase name="[ComboboxComponent - Angular] When there are items and filter is applied only matching items are shown" time="0.022" classname=".[ComboboxComponent - Angular] When there are items and filter is applied"/>
  <testcase name="GridColumnComponent should create" time="0.006" classname=".GridColumnComponent"/>
  <testcase name="[DropdownItemComponent - Angular] should create" time="0.007" classname=".[DropdownItemComponent - Angular]"/>
  <testcase name="[ActionPanelComponent - Angular] When clicking close button close method is called" time="0.019" classname=".[ActionPanelComponent - Angular] When clicking close button"/>
  <testcase name="[ActionPanelComponent - Angular] When creating component and title is set title is displayed" time="0.005" classname=".[ActionPanelComponent - Angular] When creating component and title is set"/>
  <testcase name="[ActionPanelComponent - Angular] When creating component it is created" time="0.006" classname=".[ActionPanelComponent - Angular] When creating component"/>
  <testcase name="[CloseButtonComponent - Angular] When disabled is true click does not bubble" time="0.007" classname=".[CloseButtonComponent - Angular] When disabled is true"/>
  <testcase name="[CloseButtonComponent - Angular] When disabled is true button is displayed as disabled" time="0.005" classname=".[CloseButtonComponent - Angular] When disabled is true"/>
  <testcase name="[CloseButtonComponent - Angular] When disabled is false click bubbles" time="0.004" classname=".[CloseButtonComponent - Angular] When disabled is false"/>
  <testcase name="[CloseButtonComponent - Angular] When disabled is false button is displayed as enabled" time="0.005" classname=".[CloseButtonComponent - Angular] When disabled is false"/>
  <testcase name="[CloseButtonComponent - Angular] WCAG Tests When button is disabled aria-disabled is set to true" time="0.004" classname=".[CloseButtonComponent - Angular] WCAG Tests When button is disabled"/>
  <testcase name="[CloseButtonComponent - Angular] WCAG Tests When button is enabled aria-disabled is false" time="0.006" classname=".[CloseButtonComponent - Angular] WCAG Tests When button is enabled"/>
  <testcase name="[CloseButtonComponent - Angular] WCAG Tests aria-label is &quot;stäng&quot;" time="0.004" classname=".[CloseButtonComponent - Angular] WCAG Tests"/>
  <testcase name="[DatepickerNewComponent] Instatiate selectedDate is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate minZoom is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate errorMessage is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate minDate is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate disabled is correct" time="0.002" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate showValidation is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate readonly is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate maxDate is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate labelId is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="[DatepickerNewComponent] Instatiate allowText is correct" time="0" classname=".[DatepickerNewComponent] Instatiate"/>
  <testcase name="SearchResultComponent1 When component is initialized with values  maxItems has the value 15" time="0" classname=".SearchResultComponent1 When component is initialized with values "/>
  <testcase name="SearchResultComponent1 When component is initialized with values  noResultsText is not the default" time="0" classname=".SearchResultComponent1 When component is initialized with values "/>
  <testcase name="SearchResultComponent1 When component is initialized with values  expanded is true " time="0.002" classname=".SearchResultComponent1 When component is initialized with values "/>
  <testcase name="SearchResultComponent1 When component is initialized with values  items is set" time="0.003" classname=".SearchResultComponent1 When component is initialized with values "/>
  <testcase name="SearchResultComponent1 When component is initialized without values  maxItems has the default value (25)" time="0" classname=".SearchResultComponent1 When component is initialized without values "/>
  <testcase name="SearchResultComponent1 When component is initialized without values  noResultsText is the default value" time="0" classname=".SearchResultComponent1 When component is initialized without values "/>
  <testcase name="SearchResultComponent1 When component is initialized without values  searchresult is not expanded" time="0" classname=".SearchResultComponent1 When component is initialized without values "/>
  <testcase name="[TitleValueComponent - test] When creating component it is created" time="0.026" classname=".[TitleValueComponent - test] When creating component"/>
  <testcase name="[RadioGroupComponent] When two components has same source, component1 has three items" time="0.001" classname=".[RadioGroupComponent] When two components has same source,"/>
  <testcase name="[RadioGroupComponent] When two components has same source, Kalle is selected on component2" time="0" classname=".[RadioGroupComponent] When two components has same source,"/>
  <testcase name="[RadioGroupComponent] When two components has same source, component2 has three items" time="0" classname=".[RadioGroupComponent] When two components has same source,"/>
  <testcase name="[RadioGroupComponent] When two components has same source, Kalle is selected on component1" time="0.001" classname=".[RadioGroupComponent] When two components has same source,"/>
  <testcase name="[RadioGroupComponent] When two components has same source, and component1 selects second option Kalle is still selected on component2" time="0.001" classname=".[RadioGroupComponent] When two components has same source, and component1 selects second option"/>
  <testcase name="[RadioGroupComponent] When two components has same source, and component1 selects second option Eva is selected on component1" time="0" classname=".[RadioGroupComponent] When two components has same source, and component1 selects second option"/>
  <testcase name="[RadioGroupComponent] When two components has same source, and component1 selects second option Kalle is not selected on component1" time="0.001" classname=".[RadioGroupComponent] When two components has same source, and component1 selects second option"/>
  <testcase name="CheckboxGroupComponent should create" time="0.009" classname=".CheckboxGroupComponent"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group on focusout onLeave() should be called" time="0.006" classname=".CheckboxGroupComponent Initial values for checkbox-group on focusout"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group setGroupDisabledOverride() should be called 2 times" time="0.004" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group _value.length should be 0" time="0.004" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group vertical should be false" time="0.004" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group validationErrorMessage should be &quot;Obligatoriskt&quot;" time="0.003" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group showValidation should be true" time="0.002" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group _disabled should be true" time="0.004" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group onKeyDown keyDown() should be called" time="0.004" classname=".CheckboxGroupComponent Initial values for checkbox-group onKeyDown"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group onChange() should be called" time="0.005" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="CheckboxGroupComponent Initial values for checkbox-group required should be false" time="0.004" classname=".CheckboxGroupComponent Initial values for checkbox-group"/>
  <testcase name="[LoaderComponent] When activated loader is visible" time="0.001" classname=".[LoaderComponent] When activated"/>
  <testcase name="[LoaderComponent] When activated and deactivated after 0.5s and reactivated after 100ms after 1s and deactivated after 1s the loader is hidden" time="0.001" classname=".[LoaderComponent] When activated and deactivated after 0.5s and reactivated after 100ms after 1s and deactivated after 1s"/>
  <testcase name="[LoaderComponent] When activated and deactivated after 0.5s and reactivated after 100ms the loader is visible" time="0" classname=".[LoaderComponent] When activated and deactivated after 0.5s and reactivated after 100ms"/>
  <testcase name="[LoaderComponent] When activated and deactivated after 0.5s after an additional 0.5s the loader is hidden" time="0.001" classname=".[LoaderComponent] When activated and deactivated after 0.5s after an additional 0.5s"/>
  <testcase name="[LoaderComponent] When activated and deactivated after 0.5s loader is still visible" time="0" classname=".[LoaderComponent] When activated and deactivated after 0.5s"/>
  <testcase name="[LoaderComponent] When activated and deactivated after 1s the loader is hidden" time="0.001" classname=".[LoaderComponent] When activated and deactivated after 1s"/>
  <testcase name="[LoaderComponent] When initialized loader is not visible" time="0.002" classname=".[LoaderComponent] When initialized"/>
  <testcase name="[LoaderComponent] When initialized loader is not active" time="0.001" classname=".[LoaderComponent] When initialized"/>
  <testcase name="[ButtonComponent] Instatiate buttonStyle is correct" time="0" classname=".[ButtonComponent] Instatiate"/>
  <testcase name="[ButtonComponent] Instatiate type is correct" time="0" classname=".[ButtonComponent] Instatiate"/>
  <testcase name="[ButtonComponent] Instatiate disabled is correct" time="0.001" classname=".[ButtonComponent] Instatiate"/>
  <testcase name="GridService should be created" time="0.006" classname=".GridService"/>
  <testcase name="RadioGroupComponent When initialized with a disabled option and the disabled option is clicked the option is not selected" time="0.018" classname=".RadioGroupComponent When initialized with a disabled option and the disabled option is clicked"/>
  <testcase name="RadioGroupComponent When initialized with a disabled option options are displayed" time="0.007" classname=".RadioGroupComponent When initialized with a disabled option"/>
  <testcase name="RadioGroupComponent When initialized with a disabled option the disabled option is displayed as disabled" time="0.005" classname=".RadioGroupComponent When initialized with a disabled option"/>
  <testcase name="RadioGroupComponent WCAG compatibility The radiobuttons has role radio." time="0.006" classname=".RadioGroupComponent WCAG compatibility"/>
  <testcase name="RadioGroupComponent WCAG compatibility When the aria-labelledby is defined on the radiobutton  radiobutton has a label with a guid" time="0.004" classname=".RadioGroupComponent WCAG compatibility When the aria-labelledby is defined on the radiobutton "/>
  <testcase name="RadioGroupComponent WCAG compatibility When the aria-labelledby is defined on the radiobutton  radiobutton is associated with the label" time="0.005" classname=".RadioGroupComponent WCAG compatibility When the aria-labelledby is defined on the radiobutton "/>
  <testcase name="RadioGroupComponent WCAG compatibility When the aria-labelledby is defined on the radiobutton  radiobuttons labels are unique" time="0.004" classname=".RadioGroupComponent WCAG compatibility When the aria-labelledby is defined on the radiobutton "/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected the option is  selected" time="0.006" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed only one option is selected" time="0.009" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed last option is selected" time="0.007" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed and up arrow key is pressed previous option is selected (Per Åkerberg), " time="0.007" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed and up arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed and up arrow key is pressed only one option is selected" time="0.008" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and down arrow key is pressed and up arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed only one option is selected" time="0.007" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed next option is selected (Sofia Hejdenberg)" time="0.008" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed and left arrow key is pressed only one option is selected" time="0.011" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed and left arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed and left arrow key is pressed previous option is selected (Per Åkerberg), " time="0.01" classname=".RadioGroupComponent WCAG compatibility Use arrowkeys to move bewtween radiobuttons; When first option is selected and right arrow key is pressed and left arrow key is pressed"/>
  <testcase name="RadioGroupComponent WCAG compatibility The radiogroup has role radiogroup." time="0.005" classname=".RadioGroupComponent WCAG compatibility"/>
  <testcase name="RadioGroupComponent WCAG compatibility no option is selected" time="0.005" classname=".RadioGroupComponent WCAG compatibility"/>
  <testcase name="RadioGroupComponent WCAG compatibility When aria-check state is set  and the radiobutton is checked and the radiobutton is not checked the radiobutton element has state aria-checked set to false" time="0.004" classname=".RadioGroupComponent WCAG compatibility When aria-check state is set  and the radiobutton is checked and the radiobutton is not checked"/>
  <testcase name="RadioGroupComponent WCAG compatibility When aria-check state is set  and the radiobutton is checked the radiobutton element has state aria-checked set to true" time="0.004" classname=".RadioGroupComponent WCAG compatibility When aria-check state is set  and the radiobutton is checked"/>
  <testcase name="RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected first element has tabstop" time="0.006" classname=".RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected"/>
  <testcase name="RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected When second option is selected the second option is the first tabstop the option is  selected" time="0.008" classname=".RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected When second option is selected the second option is the first tabstop"/>
  <testcase name="RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected When second option is selected the second option is the first tabstop the selected option has tabstop" time="0.007" classname=".RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected When second option is selected the second option is the first tabstop"/>
  <testcase name="RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected When second option is selected the second option is the first tabstop only the second option has first tabstop" time="0.008" classname=".RadioGroupComponent WCAG compatibility Tabstop is set When no option is selected When second option is selected the second option is the first tabstop"/>
  <testcase name="RadioGroupComponent When initialized with vertical set to true the options are displayed vertically" time="0.004" classname=".RadioGroupComponent When initialized with vertical set to true"/>
  <testcase name="RadioGroupComponent When initialized with options options are displayed" time="0.008" classname=".RadioGroupComponent When initialized with options"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is clicked the option is selected" time="0.013" classname=".RadioGroupComponent When initialized with options and an option is clicked"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is clicked an selectedChanged event is emitted" time="0.013" classname=".RadioGroupComponent When initialized with options and an option is clicked"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is clicked and the already selected option is clicked again the option is still selected" time="0.012" classname=".RadioGroupComponent When initialized with options and an option is clicked and the already selected option is clicked again"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is clicked and the already selected option is clicked again no selectedChanged event is emitted" time="0.009" classname=".RadioGroupComponent When initialized with options and an option is clicked and the already selected option is clicked again"/>
  <testcase name="RadioGroupComponent When initialized with options the options are displayed horizontally" time="0.005" classname=".RadioGroupComponent When initialized with options"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is selected by pressing the Enter key an selectedChanged event is emitted" time="0.007" classname=".RadioGroupComponent When initialized with options and an option is selected by pressing the Enter key"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is selected by pressing the Enter key the option is selected" time="0.007" classname=".RadioGroupComponent When initialized with options and an option is selected by pressing the Enter key"/>
  <testcase name="RadioGroupComponent When initialized with options no option is selected" time="0.006" classname=".RadioGroupComponent When initialized with options"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is selected by pressing the Space key the option is selected" time="0.008" classname=".RadioGroupComponent When initialized with options and an option is selected by pressing the Space key"/>
  <testcase name="RadioGroupComponent When initialized with options and an option is selected by pressing the Space key an selectedChanged event is emitted" time="0.008" classname=".RadioGroupComponent When initialized with options and an option is selected by pressing the Space key"/>
  <testcase name="RadioGroupComponent When initialized with two selected options an selectedChanged event is emitted" time="0.004" classname=".RadioGroupComponent When initialized with two selected options"/>
  <testcase name="RadioGroupComponent When initialized with two selected options the first pre-selected option is selected" time="0.011" classname=".RadioGroupComponent When initialized with two selected options"/>
  <testcase name="RadioGroupComponent When initialized with two selected options options are displayed" time="0.006" classname=".RadioGroupComponent When initialized with two selected options"/>
  <testcase name="RadioGroupComponent When initialized with one selected option the pre-selected option is selected" time="0.006" classname=".RadioGroupComponent When initialized with one selected option"/>
  <testcase name="RadioGroupComponent When initialized with one selected option options are displayed" time="0.008" classname=".RadioGroupComponent When initialized with one selected option"/>
  <testcase name="[ActionPanelComponent - Angular] When creating component set to 1 in width" time="0.003" classname=".[ActionPanelComponent - Angular] When creating component"/>
  <testcase name="[ActionPanelComponent - Angular] When creating component it is created" time="0.003" classname=".[ActionPanelComponent - Angular] When creating component"/>
  <testcase name="HeaderMenuComponent Toggle Header Menu and key is space" time="0.041" classname=".HeaderMenuComponent Toggle Header Menu"/>
  <testcase name="HeaderMenuComponent Toggle Header Menu and key is space (IE)" time="0.011" classname=".HeaderMenuComponent Toggle Header Menu"/>
  <testcase name="HeaderMenuComponent Toggle Header Menu and key is Enter" time="0.01" classname=".HeaderMenuComponent Toggle Header Menu"/>
  <testcase name="HeaderMenuComponent Toggle Header Menu and key is not Spacebar or Enter" time="0.011" classname=".HeaderMenuComponent Toggle Header Menu"/>
  <testcase name="HeaderMenuComponent When component is initialized and toggleHeaderMenu is called  headerMenu should be visible" time="0.01" classname=".HeaderMenuComponent When component is initialized and toggleHeaderMenu is called "/>
  <testcase name="HeaderMenuComponent clickToggleHeaderMenu When header menu exists header menu is toggled" time="0.01" classname=".HeaderMenuComponent clickToggleHeaderMenu When header menu exists"/>
  <testcase name="HeaderMenuComponent ngOnChanges When initials have changed from no value to some value internal initials are set to new value" time="0.01" classname=".HeaderMenuComponent ngOnChanges When initials have changed from no value to some value"/>
  <testcase name="HeaderMenuComponent ngOnChanges When initials have changed from some value to some other value internal initials are set to new value" time="0.01" classname=".HeaderMenuComponent ngOnChanges When initials have changed from some value to some other value"/>
  <testcase name="HeaderMenuComponent ngOnChanges When initials have changed from some value to no value and user name has value internal initials are set from user name" time="0.02" classname=".HeaderMenuComponent ngOnChanges When initials have changed from some value to no value and user name has value"/>
  <testcase name="HeaderMenuComponent ngOnChanges When initials have changed from some value to no value and user name has no value internal initials are empty" time="0.011" classname=".HeaderMenuComponent ngOnChanges When initials have changed from some value to no value and user name has no value"/>
  <testcase name="HeaderMenuComponent ngOnChanges When initials have not changed and user name has changed and initials have no value and user name has value internal initials are set from user name" time="0.009" classname=".HeaderMenuComponent ngOnChanges When initials have not changed and user name has changed and initials have no value and user name has value"/>
  <testcase name="HeaderMenuComponent ngOnChanges When initials have not changed and user name has changed and initials have no value and user name has no value internal initials are empty" time="0.012" classname=".HeaderMenuComponent ngOnChanges When initials have not changed and user name has changed and initials have no value and user name has no value"/>
  <testcase name="HeaderMenuComponent Test variables circleColor is correct" time="0.01" classname=".HeaderMenuComponent Test variables"/>
  <testcase name="HeaderMenuComponent Test variables textColor is correct" time="0.011" classname=".HeaderMenuComponent Test variables"/>
  <testcase name="HeaderMenuComponent Test variables userName is correct" time="0.01" classname=".HeaderMenuComponent Test variables"/>
  <testcase name="HeaderMenuComponent Test variables initials is correct" time="0.011" classname=".HeaderMenuComponent Test variables"/>
  <testcase name="GridHeaderToolbarComponent should create" time="0.005" classname=".GridHeaderToolbarComponent"/>
  <testcase name="[ActionPanelComponent - Angular] When creating component set to 1 in width" time="0.003" classname=".[ActionPanelComponent - Angular] When creating component"/>
  <testcase name="[ActionPanelComponent - Angular] When creating component it is created" time="0.002" classname=".[ActionPanelComponent - Angular] When creating component"/>
  <testcase name="[ToggleButtonComponent - Angular] When disabled is false button is displayed as enabled" time="0.01" classname=".[ToggleButtonComponent - Angular] When disabled is false"/>
  <testcase name="[ToggleButtonComponent - Angular] When disabled is false click bubbles" time="0.003" classname=".[ToggleButtonComponent - Angular] When disabled is false"/>
  <testcase name="[ToggleButtonComponent - Angular] When disabled is true click does not bubble" time="0.003" classname=".[ToggleButtonComponent - Angular] When disabled is true"/>
  <testcase name="[ToggleButtonComponent - Angular] When disabled is true button is displayed as disabled" time="0.003" classname=".[ToggleButtonComponent - Angular] When disabled is true"/>
  <testcase name="[ToggleButtonComponent - Angular] When pressed is false button is dispalyed as secondary" time="0.003" classname=".[ToggleButtonComponent - Angular] When pressed is false"/>
  <testcase name="[ToggleButtonComponent - Angular] When pressed is true button is dispalyed as primary" time="0.005" classname=".[ToggleButtonComponent - Angular] When pressed is true"/>
  <testcase name="TabManagementService should be created" time="0.004" classname=".TabManagementService"/>
  <testcase name="[CardSectionComponent] When component is initialized and section is expanded expanded class is set" time="0.019" classname=".[CardSectionComponent] When component is initialized and section is expanded"/>
  <testcase name="[CardSectionComponent] When component is initialized and section is expanded expanded is true" time="0.009" classname=".[CardSectionComponent] When component is initialized and section is expanded"/>
  <testcase name="[CardSectionComponent] When component is initialized and section is expanded and section is collapsed expanded is false" time="0.01" classname=".[CardSectionComponent] When component is initialized and section is expanded and section is collapsed"/>
  <testcase name="[CardSectionComponent] When component is initialized and section is expanded and section is collapsed expanded class is not set" time="0.008" classname=".[CardSectionComponent] When component is initialized and section is expanded and section is collapsed"/>
  <testcase name="[CardSectionComponent] When component is initialized readonly is set to true" time="0.008" classname=".[CardSectionComponent] When component is initialized"/>
  <testcase name="[CardSectionComponent] When component is initialized and title is set title is displayed" time="0.009" classname=".[CardSectionComponent] When component is initialized and title is set"/>
  <testcase name="[CardSectionComponent] When component is initialized backgroundColor is default white" time="0.006" classname=".[CardSectionComponent] When component is initialized"/>
  <testcase name="[CardSectionComponent] When component is initialized and header is clicked and header is clicked again section is collapsed" time="0.009" classname=".[CardSectionComponent] When component is initialized and header is clicked and header is clicked again"/>
  <testcase name="[CardSectionComponent] When component is initialized and header is clicked section is expanded" time="0.007" classname=".[CardSectionComponent] When component is initialized and header is clicked"/>
  <testcase name="[CardSectionComponent] When component is initialized and backgroundColor is set backgroundColor is displayed" time="0.008" classname=".[CardSectionComponent] When component is initialized and backgroundColor is set"/>
  <testcase name="[CardSectionComponent] When component is initialized header is focused and space is pressed header is focused and enter is pressed section is compressed" time="0.008" classname=".[CardSectionComponent] When component is initialized header is focused and space is pressed header is focused and enter is pressed"/>
  <testcase name="[CardSectionComponent] When component is initialized header is focused and space is pressed section is expanded" time="0.016" classname=".[CardSectionComponent] When component is initialized header is focused and space is pressed"/>
  <testcase name="[CardSectionComponent] When component is initialized component has class card-section" time="0.01" classname=".[CardSectionComponent] When component is initialized"/>
  <testcase name="ModalPlaceholderComponent When component is initialized modal is not open" time="0.014" classname=".ModalPlaceholderComponent When component is initialized"/>
  <testcase name="ModalPlaceholderComponent When component is initialized modal get unique name" time="0.004" classname=".ModalPlaceholderComponent When component is initialized"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked value is set" time="0.043" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again label is set" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again all items are deselected" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again event is emitted" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again value is set" time="0.02" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked and select all is clicked again"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked event is emitted" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked label is set" time="0.019" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and select all is clicked all items are selected" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and select all is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked label is set" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked label is set" time="0.022" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked both items are selected" time="0.017" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked value is set" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked event is emitted" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then other unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked item is selected" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked label is set" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked item is deselected" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked value is set" time="0.02" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked event is emitted" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked and then selected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked event is emitted" time="0.02" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked value is set" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is true and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is true select all is shown" time="0.016" classname=".[DropdownSelectComponent - Angular] When multi is true"/>
  <testcase name="[DropdownSelectComponent - Angular] When there are 20 items or less filter is not shown" time="0.03" classname=".[DropdownSelectComponent - Angular] When there are 20 items or less"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked label is set" time="0.021" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked value is set" time="0.017" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked event is emitted" time="0.02" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked new item is selected" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked previous item is deselected" time="0.018" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and then other item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked value is set" time="0.022" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked item is deselected" time="0.03" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked label is set" time="0.025" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked value is set" time="0.024" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked event is emitted" time="0.024" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked and deselect button is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked event is emitted" time="0.032" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked item is selected" time="0.019" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked label is set" time="0.017" classname=".[DropdownSelectComponent - Angular] When multi is false and unselected item is clicked"/>
  <testcase name="[DropdownSelectComponent - Angular] When there are more than 20 items and filter is applied only matching items are shown" time="0.039" classname=".[DropdownSelectComponent - Angular] When there are more than 20 items and filter is applied"/>
  <testcase name="[DropdownSelectComponent - Angular] When there are more than 20 items filter is shown" time="0.04" classname=".[DropdownSelectComponent - Angular] When there are more than 20 items"/>
  <testcase name="[DropdownSelectComponent - Angular] When header is clicked and menu is expanded menu is collapsed" time="0.013" classname=".[DropdownSelectComponent - Angular] When header is clicked and menu is expanded"/>
  <testcase name="[DropdownSelectComponent - Angular] When header is clicked and menu is expanded event is emitted" time="0.01" classname=".[DropdownSelectComponent - Angular] When header is clicked and menu is expanded"/>
  <testcase name="[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed event is emitted" time="0.006" classname=".[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed"/>
  <testcase name="[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed and component is disabled menu is not expanded" time="0.009" classname=".[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed and component is disabled"/>
  <testcase name="[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed and component is readonly menu is not expanded" time="0.007" classname=".[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed and component is readonly"/>
  <testcase name="[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed menu is expanded" time="0.015" classname=".[DropdownSelectComponent - Angular] When header is clicked and menu is collapsed"/>
  <testcase name="[DropdownSelectComponent - Angular] When deselectable is true and multi is true deselect button is not shown" time="0.019" classname=".[DropdownSelectComponent - Angular] When deselectable is true and multi is true"/>
  <testcase name="[DropdownSelectComponent - Angular] When deselectable is true deselect button is shown" time="0.018" classname=".[DropdownSelectComponent - Angular] When deselectable is true"/>
  <testcase name="[DropdownSelectComponent - Angular] should create" time="0.008" classname=".[DropdownSelectComponent - Angular]"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems first menuitem is Start " time="0.021" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  disabled menuitem is focused" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  submenu is expanded" time="0.012" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  and enter is pressed item has disabled set to true" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  and enter is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  and enter is pressed submenu is still expanded" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  and enter is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  and enter is pressed last submenuitem has focus" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems When an inactive menuitem has focus in an opened submenu  and enter is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems menuitem  menuitem is disabled  disabled menuitem is back to top" time="0.01" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems menuitem  menuitem is disabled "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems menuitem  menuitem is disabled  tabIndex = 0" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems menuitem  menuitem is disabled "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems menuitem  should have the role menuitem" time="0.009" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems menuitem "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems second menuitem is Komponenter " time="0.022" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow up is pressed on first menuitem with closed submenu submenuitem has focus" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow up is pressed on first menuitem with closed submenu"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed on last visible menuitem first menuItems has focus" time="0.012" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed on last visible menuitem"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed first item in the submenuitem has focus" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed last item in the submenuitem has focus" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed arrow up is pressed previous menuitem has focus" time="0.017" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed arrow up is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed arrow up is pressed arrowUp event is emitted" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed arrow up is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed arrow up is pressed submenu should still be expanded" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed arrow up is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed first item in menu is focused" time="0.016" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed submenu should be expanded" time="0.028" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed home event is emitted from menuitem" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed home event is emitted from submenuitem" time="0.016" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed home is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed escape is pressed submenu is focused" time="0.016" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed escape is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed escape is pressed escape event is emitted" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed escape is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed submenu should be expanded" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed godown event is emitted" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed submenu should be expanded" time="0.016" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed home event is emitted from menuitem" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed home event is emitted from submenuitem" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed last visible item on menu is focused (submenus last item)" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow down is pressed end is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed submenu should be expanded" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow up is pressed submenuitem has focus" time="0.016" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow up is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow up is pressed arrowUp event is emitted" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Space is pressed arrow up is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed submenuitem has focus" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Enter is pressed first item in the submenuitem has focus" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Enter is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Enter is pressed submenu should be expanded" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed Enter is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed submenu should not be expanded" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed godown event is emitted" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow down is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus space is pressed router is activated" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus space is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus enter is pressed router is activated" time="0.013" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus enter is pressed"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow up is pressed on first menuitem with opened submenu submenu is expanded" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow up is pressed on first menuitem with opened submenu"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow up is pressed on first menuitem with opened submenu last submenuitem has focus" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus Arrow up is pressed on first menuitem with opened submenu"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus first menuitem has focus" time="0.014" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems and first menuitem (Start) has focus"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems should have the role menu" time="0.01" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems"/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems submenu  should have the role menuitem" time="0.011" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems submenu "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems submenu  tabIndex = 0" time="0.015" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems submenu "/>
  <testcase name="[MenuComponent] WCAG Tests When menu is initialized with two menuitems submenu  aria-haspopup true " time="0.01" classname=".[MenuComponent] WCAG Tests When menu is initialized with two menuitems submenu "/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems When component is initialized with a title of length 6 title should have smaller font" time="0.009" classname=".[MenuComponent] When component is initialized with two menuitems When component is initialized with a title of length 6"/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems When component is initialized with a title of length 6 title should be Rubrik" time="0.009" classname=".[MenuComponent] When component is initialized with two menuitems When component is initialized with a title of length 6"/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems When component is initialized with a title of length 6 title should have class for smaller font" time="0.019" classname=".[MenuComponent] When component is initialized with two menuitems When component is initialized with a title of length 6"/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems with a menu title longer than 9 characters title should have class for smaller font" time="0.01" classname=".[MenuComponent] When component is initialized with two menuitems with a menu title longer than 9 characters"/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems with a menu title longer than 9 characters title should be Menyrubrik" time="0.011" classname=".[MenuComponent] When component is initialized with two menuitems with a menu title longer than 9 characters"/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems with a menu title longer than 9 characters title should have smaller font" time="0.009" classname=".[MenuComponent] When component is initialized with two menuitems with a menu title longer than 9 characters"/>
  <testcase name="[MenuComponent] When component is initialized with two menuitems should contain two menuitems " time="0.008" classname=".[MenuComponent] When component is initialized with two menuitems"/>
  <testcase name="[HeaderComponent] Instatiate logoClass is correct" time="0.001" classname=".[HeaderComponent] Instatiate"/>
  <testcase name="[HeaderComponent] Instatiate systemText is correct" time="0.002" classname=".[HeaderComponent] Instatiate"/>
  <testcase name="[HeaderComponent] Instatiate hideSwosh is correct" time="0" classname=".[HeaderComponent] Instatiate"/>
  <testcase name="[HeaderComponent] Instatiate headerMenu is correct" time="0" classname=".[HeaderComponent] Instatiate"/>
  <testcase name="[PageBlockComponent] Instatiate transparent is correct" time="0" classname=".[PageBlockComponent] Instatiate"/>
  <testcase name="truncatePipe test When text is undefined empty text is returned" time="0.001" classname=".truncatePipe test When text is undefined"/>
  <testcase name="truncatePipe test When text is 20 characters long and limit is not set text should not be modified" time="0.001" classname=".truncatePipe test When text is 20 characters long and limit is not set"/>
  <testcase name="truncatePipe test When text is 20 characters long and limit is 10 characters text should be 7 characters and trailing ..." time="0.001" classname=".truncatePipe test When text is 20 characters long and limit is 10 characters"/>
  <testcase name="truncatePipe test When text is 20 characters long and limit is 10 characters text should be 10 characters long" time="0.003" classname=".truncatePipe test When text is 20 characters long and limit is 10 characters"/>
  <testcase name="truncatePipe test When text is 20 characters long and limit is greater than text text should not be modified" time="0.001" classname=".truncatePipe test When text is 20 characters long and limit is greater than text"/>
  <testcase name="truncatePipe test When text is 20 characters long and limit is not a number text should not be modified" time="0" classname=".truncatePipe test When text is 20 characters long and limit is not a number"/>
  <testcase name="truncatePipe test When text is 20 characters long and limit is equal to text text should not be modified" time="0" classname=".truncatePipe test When text is 20 characters long and limit is equal to text"/>
  <testcase name="[ButtonComponent - Angular] WCAG Tests When button is disabled aria-disabled is true" time="0.008" classname=".[ButtonComponent - Angular] WCAG Tests When button is disabled"/>
  <testcase name="[ButtonComponent - Angular] WCAG Tests When button is enabled aria-disabled is false" time="0.004" classname=".[ButtonComponent - Angular] WCAG Tests When button is enabled"/>
  <testcase name="[ButtonComponent - Angular] When type is submit button type is submit" time="0.003" classname=".[ButtonComponent - Angular] When type is submit"/>
  <testcase name="[ButtonComponent - Angular] When disabled is true click does not bubble" time="0.008" classname=".[ButtonComponent - Angular] When disabled is true"/>
  <testcase name="[ButtonComponent - Angular] When disabled is true button is displayed as disabled" time="0.005" classname=".[ButtonComponent - Angular] When disabled is true"/>
  <testcase name="[ButtonComponent - Angular] When disabled is true and disabled is changed to false button is displayed as enabling" time="0.004" classname=".[ButtonComponent - Angular] When disabled is true and disabled is changed to false"/>
  <testcase name="[ButtonComponent - Angular] When type is omitted button type is button" time="0.003" classname=".[ButtonComponent - Angular] When type is omitted"/>
  <testcase name="[ButtonComponent - Angular] When type is button button type is button" time="0.004" classname=".[ButtonComponent - Angular] When type is button"/>
  <testcase name="[ButtonComponent - Angular] When disabled is false button is displayed as enabled" time="0.003" classname=".[ButtonComponent - Angular] When disabled is false"/>
  <testcase name="[ButtonComponent - Angular] When disabled is false click bubbles" time="0.006" classname=".[ButtonComponent - Angular] When disabled is false"/>
  <testcase name="EditableTableComponent should create" time="0.013" classname=".EditableTableComponent"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow up key previous filter tag is focused" time="0.025" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow up key"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow down in IE next filter tag is focused" time="0.01" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow down in IE"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow left key in IE previous filter tag is focused" time="0.012" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow left key in IE"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow left key previous filter tag is focused" time="0.01" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow left key"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow right key next filter tag is focused" time="0.013" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow right key"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow up in IE previous filter tag is focused" time="0.01" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow up in IE"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow right key in IE next filter tag is focused" time="0.011" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow right key in IE"/>
  <testcase name="[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow down key next filter tag is focused" time="0.01" classname=".[FilterTagGroupComponent - Angular] When navigating with keyboard and pressing arrow down key"/>
  <testcase name="RadiobuttonItemComponent when item is clicked firstfocusIn() should have been called" time="0.012" classname=".RadiobuttonItemComponent when item is clicked"/>
  <testcase name="RadiobuttonItemComponent when item is clicked and isTabEnabled is false isTabEnabled should be false" time="0.005" classname=".RadiobuttonItemComponent when item is clicked and isTabEnabled is false"/>
  <testcase name="RadiobuttonItemComponent when item is clicked selected should be true" time="0.006" classname=".RadiobuttonItemComponent when item is clicked"/>
  <testcase name="RadiobuttonItemComponent when item is clicked isTabEnabled should be false" time="0.006" classname=".RadiobuttonItemComponent when item is clicked"/>
  <testcase name="RadiobuttonItemComponent when item is clicked focus() should have been called" time="0.006" classname=".RadiobuttonItemComponent when item is clicked"/>
  <testcase name="RadiobuttonItemComponent when item is clicked and groupDisabledOverride is true disabled should be true" time="0.006" classname=".RadiobuttonItemComponent when item is clicked and groupDisabledOverride is true"/>
  <testcase name="RadiobuttonItemComponent when item is clicked itemClicked() should have been called" time="0.008" classname=".RadiobuttonItemComponent when item is clicked"/>
  <testcase name="RadiobuttonItemComponent should create" time="0.003" classname=".RadiobuttonItemComponent"/>
  <testcase name="[NotificationComponent] Notification 5 should have class &quot;info&quot;" time="0.018" classname=".[NotificationComponent] Notification 5"/>
  <testcase name="[NotificationComponent] Notification 5 should have class &quot;standalone-notification&quot;" time="0.007" classname=".[NotificationComponent] Notification 5"/>
  <testcase name="[NotificationComponent] Notification 5 should have width &quot;100px&quot;" time="0.007" classname=".[NotificationComponent] Notification 5"/>
  <testcase name="[NotificationComponent] Notification 5 should have text &quot;Med info &amp; standalone-klass, ikon autoadderad och bredd satt&quot;" time="0.011" classname=".[NotificationComponent] Notification 5"/>
  <testcase name="[NotificationComponent] Notification 5 should have icon automaticly added" time="0.008" classname=".[NotificationComponent] Notification 5"/>
  <testcase name="[NotificationComponent] Notification 3 should have icon automaticly added" time="0.007" classname=".[NotificationComponent] Notification 3"/>
  <testcase name="[NotificationComponent] Notification 3 should have text &quot;Med error &amp; standalone-klass, och ikon autoadderad&quot;" time="0.011" classname=".[NotificationComponent] Notification 3"/>
  <testcase name="[NotificationComponent] Notification 3 should have class &quot;error&quot;" time="0.007" classname=".[NotificationComponent] Notification 3"/>
  <testcase name="[NotificationComponent] Notification 3 should have class &quot;standalone-notification&quot;" time="0.008" classname=".[NotificationComponent] Notification 3"/>
  <testcase name="[NotificationComponent] Notification 2 should have any icon automaticly added" time="0.006" classname=".[NotificationComponent] Notification 2"/>
  <testcase name="[NotificationComponent] Notification 2 should have text &quot;Med success-klass&quot;" time="0.021" classname=".[NotificationComponent] Notification 2"/>
  <testcase name="[NotificationComponent] Notification 2 should have class &quot;success&quot;" time="0.007" classname=".[NotificationComponent] Notification 2"/>
  <testcase name="[NotificationComponent] Notification 4 should have class &quot;standalone-notification&quot;" time="0.01" classname=".[NotificationComponent] Notification 4"/>
  <testcase name="[NotificationComponent] Notification 4 should have class &quot;warning&quot;" time="0.007" classname=".[NotificationComponent] Notification 4"/>
  <testcase name="[NotificationComponent] Notification 4 should have text &quot;Med warning &amp; standalone-klass, ingen ikon&quot;" time="0.012" classname=".[NotificationComponent] Notification 4"/>
  <testcase name="[NotificationComponent] Notification 4 should not have any icon automaticly added" time="0.006" classname=".[NotificationComponent] Notification 4"/>
  <testcase name="[NotificationComponent] Notification 1 should not have any icon automaticly added" time="0.007" classname=".[NotificationComponent] Notification 1"/>
  <testcase name="[NotificationComponent] Notification 1 should have text &quot;Utan klass och utan ikon&quot;" time="0.012" classname=".[NotificationComponent] Notification 1"/>
  <testcase name="[NotificationComponent] Notification 1 should have not have any class&quot;" time="0.007" classname=".[NotificationComponent] Notification 1"/>
  <testcase name="PanelComponent When component is initialized with width = 12 and color = blue should have the classes flex-width--3" time="0.009" classname=".PanelComponent When component is initialized with width = 12 and color = blue"/>
  <testcase name="PanelComponent When component is initialized with width = 5 and color = red should have the classes flex-width--3" time="0.003" classname=".PanelComponent When component is initialized with width = 5 and color = red"/>
  <testcase name="PanelComponent When component is initialized with width = 6 and no border should have the classes flex-width--6" time="0.002" classname=".PanelComponent When component is initialized with width = 6 and no border"/>
  <testcase name="PanelComponent When component is initialized should have the classes flex-width--4" time="0.003" classname=".PanelComponent When component is initialized"/>
  <testcase name="[DropdownSelectComponent] onFocus hasFocus is set to true" time="0" classname=".[DropdownSelectComponent] onFocus"/>
  <testcase name="[DropdownSelectComponent] combinedLabelIds is labelId and headerLabelId" time="0" classname=".[DropdownSelectComponent] combinedLabelIds"/>
  <testcase name="[DropdownSelectComponent] Instatiate filterVisible is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate expanded is correct" time="0.001" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate compareWith is correct for numbers" time="0" classname=".[DropdownSelectComponent] Instatiate compareWith is correct"/>
  <testcase name="[DropdownSelectComponent] Instatiate compareWith is correct for strings" time="0" classname=".[DropdownSelectComponent] Instatiate compareWith is correct"/>
  <testcase name="[DropdownSelectComponent] Instatiate compareWith is correct for booleans" time="0" classname=".[DropdownSelectComponent] Instatiate compareWith is correct"/>
  <testcase name="[DropdownSelectComponent] Instatiate compareWith is correct for objects" time="0" classname=".[DropdownSelectComponent] Instatiate compareWith is correct"/>
  <testcase name="[DropdownSelectComponent] Instatiate labelId is correct" time="0.002" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate simpleLabel is correct" time="0.001" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate disabled is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate readonly is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate noItemSelectedLabel is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate deselectDisabled is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate allSelected is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate multi is correct" time="0.001" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate showValidation is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate deselectable is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate small is correct" time="0.002" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="[DropdownSelectComponent] Instatiate label is correct" time="0" classname=".[DropdownSelectComponent] Instatiate"/>
  <testcase name="GridHeaderColumnComponent should create" time="0.008" classname=".GridHeaderColumnComponent"/>
  <testcase name="GridHeaderComponent should create" time="0.004" classname=".GridHeaderComponent"/>
  <testcase name="InputComponent when initiated Should get the show-validation by default" time="0.005" classname=".InputComponent when initiated"/>
  <testcase name="InputComponent When using a suffix it should be right aligned and show suffix" time="0.006" classname=".InputComponent When using a suffix"/>
  <testcase name="InputComponent Error messages should show as invalid" time="0.004" classname=".InputComponent Error messages"/>
  <testcase name="InputComponent Error messages Adding a value Sholud be valid" time="0.009" classname=".InputComponent Error messages Adding a value"/>
  <testcase name="InputComponent When using a prefix it should be left aligned (default) and show prefix" time="0.004" classname=".InputComponent When using a prefix"/>
  <testcase name="InputComponent should create" time="0.01" classname=".InputComponent"/>
  <testcase name="[FilterTagComponent - Angular] When disabled is false button is displayed as enabled" time="0.008" classname=".[FilterTagComponent - Angular] When disabled is false"/>
  <testcase name="[FilterTagComponent - Angular] When disabled is false click bubbles" time="0.005" classname=".[FilterTagComponent - Angular] When disabled is false"/>
  <testcase name="[FilterTagComponent - Angular] When disabled is true button is displayed as disabled" time="0.004" classname=".[FilterTagComponent - Angular] When disabled is true"/>
  <testcase name="[FilterTagComponent - Angular] When disabled is true click does not bubble" time="0.006" classname=".[FilterTagComponent - Angular] When disabled is true"/>
  <testcase name="[FilterTagComponent - Angular] When button is clicked and component is disabled button is not displayed as removed after delay" time="0.004" classname=".[FilterTagComponent - Angular] When button is clicked and component is disabled"/>
  <testcase name="[FilterTagComponent - Angular] When button is clicked and component is disabled button is not displayed as removing" time="0.004" classname=".[FilterTagComponent - Angular] When button is clicked and component is disabled"/>
  <testcase name="[FilterTagComponent - Angular] When button is clicked and component is disabled remove is not emitted after delay" time="0.004" classname=".[FilterTagComponent - Angular] When button is clicked and component is disabled"/>
  <testcase name="[FilterTagComponent - Angular] When button is clicked button is displayed as removing" time="0.009" classname=".[FilterTagComponent - Angular] When button is clicked"/>
  <testcase name="[FilterTagComponent - Angular] When button is clicked remove is emitted after delay" time="0.005" classname=".[FilterTagComponent - Angular] When button is clicked"/>
  <testcase name="[FilterTagComponent - Angular] When button is clicked button is displayed as removed after delay" time="0.004" classname=".[FilterTagComponent - Angular] When button is clicked"/>
  <testcase name="[ComboboxComponent] combinedLabelIds is labelId and headerLabelId" time="0" classname=".[ComboboxComponent] combinedLabelIds"/>
  <testcase name="[ComboboxComponent] Instatiate readonly is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate disabled is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate small is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate labelId is correct" time="0.003" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate expanded is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate compareWith is correct for booleans" time="0" classname=".[ComboboxComponent] Instatiate compareWith is correct"/>
  <testcase name="[ComboboxComponent] Instatiate compareWith is correct for numbers" time="0.004" classname=".[ComboboxComponent] Instatiate compareWith is correct"/>
  <testcase name="[ComboboxComponent] Instatiate compareWith is correct for objects" time="0" classname=".[ComboboxComponent] Instatiate compareWith is correct"/>
  <testcase name="[ComboboxComponent] Instatiate compareWith is correct for strings" time="0.001" classname=".[ComboboxComponent] Instatiate compareWith is correct"/>
  <testcase name="[ComboboxComponent] Instatiate showValidation is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate showButton is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[ComboboxComponent] Instatiate listAlignRight is correct" time="0" classname=".[ComboboxComponent] Instatiate"/>
  <testcase name="[PaginationComponent] onPageButtonBlur focusedPageLabel is not cleard" time="0" classname=".[PaginationComponent] onPageButtonBlur"/>
  <testcase name="[PaginationComponent] onPageButtonBlur focusedPageLabel is cleared" time="0.001" classname=".[PaginationComponent] onPageButtonBlur"/>
  <testcase name="[PaginationComponent] onPageButtonFocus focusedPageLabel is not set" time="0" classname=".[PaginationComponent] onPageButtonFocus"/>
  <testcase name="[PaginationComponent] onPageButtonFocus focusedPageLabel is set" time="0" classname=".[PaginationComponent] onPageButtonFocus"/>
  <testcase name="[PaginationComponent] Instatiate focusedPageLabel be correct" time="0" classname=".[PaginationComponent] Instatiate"/>
  <testcase name="[PaginationComponent] Instatiate pages is correct" time="0" classname=".[PaginationComponent] Instatiate"/>
  <testcase name="[PaginationComponent] Instatiate activePage is correct" time="0.002" classname=".[PaginationComponent] Instatiate"/>
  <testcase name="[PaginationComponent] Instatiate pagesItems to be correct" time="0" classname=".[PaginationComponent] Instatiate"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is not changed pageItems is correct" time="0.004" classname=".[PaginationComponent] ngOnChanges pages is not changed"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is not changed pages is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is not changed"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3 pageItem tabindexes are correct" time="0.004" classname=".[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3 pageItem active is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3 pageItem labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3 pageItems length is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3 pageItem buttonIndexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3 pageItem aria-labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed and active page is between 4 and pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1 pageItem buttonIndexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1 pageItem aria-labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1 pageItems length is correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1 pageItem labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1 pageItem tabindexes are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1 pageItem active is correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is less than or equal to 7 and active page is 1"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4 pageItem labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4 pageItem active is correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4 pageItems length is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4 pageItem tabindexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4 pageItem aria-labels are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4 pageItem buttonIndexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3 pageItem labels are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3 pageItems length is correct" time="0.002" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3 pageItem buttonIndexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3 pageItem aria-labels are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3 pageItem tabindexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3 pageItem active is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is greater than 8 and active page is greater than pages - 3"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4 pageItem labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4 pageItems length is correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4 pageItem buttonIndexes are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4 pageItem aria-labels are correct" time="0.002" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4 pageItem active is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4 pageItem tabindexes are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is greater than 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4 pageItem labels are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4 pageItem tabindexes are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4 pageItem active is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4 pageItems length is correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4 pageItem buttonIndexes are correct" time="0" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4"/>
  <testcase name="[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4 pageItem aria-labels are correct" time="0.001" classname=".[PaginationComponent] ngOnChanges pages is changed pages is 8 and active page is less than or equal to 4"/>
  <testcase name="TabButtonComponent should create" time="0.012" classname=".TabButtonComponent"/>
  <testcase name="TabButtonComponent When button is disabled button is shown as disabled" time="0.004" classname=".TabButtonComponent When button is disabled"/>
  <testcase name="TabButtonComponent When button is disabled click does not bubble" time="0.003" classname=".TabButtonComponent When button is disabled"/>
  <testcase name="TabButtonComponent When disabled is false click bubbles" time="0.009" classname=".TabButtonComponent When disabled is false"/>
  <testcase name="TabButtonComponent When disabled is false button is displayed as enabled" time="0.005" classname=".TabButtonComponent When disabled is false"/>
  <testcase name="TabButtonComponent WCAG Tests When button is disabled aria-disabled is true" time="0.004" classname=".TabButtonComponent WCAG Tests When button is disabled"/>
  <testcase name="TabButtonComponent WCAG Tests When button is enabled aria-disabled is false" time="0.006" classname=".TabButtonComponent WCAG Tests When button is enabled"/>
  <testcase name="TabButtonComponent When button is already active and pressed again button event is not propogated" time="0.004" classname=".TabButtonComponent When button is already active and pressed again"/>
  <testcase name="GridContentComponent should create" time="0.004" classname=".GridContentComponent"/>
  <testcase name="PageHeaderHeightService should be created" time="0.003" classname=".PageHeaderHeightService"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true headerrow do have class expanded" time="0.021" classname=".[TestTableComponent] When component is initialized with expanded = true"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true headerrow does not have class collapsed" time="0.005" classname=".[TestTableComponent] When component is initialized with expanded = true"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true and table header is clicked headerrow do have class expanded" time="0.044" classname=".[TestTableComponent] When component is initialized with expanded = true and table header is clicked"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true and table header is clicked headerrow does not have class collapsed" time="0.044" classname=".[TestTableComponent] When component is initialized with expanded = true and table header is clicked"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true and table header is clicked expandedChanged has been called" time="0.044" classname=".[TestTableComponent] When component is initialized with expanded = true and table header is clicked"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed headerrow do have class collapsed" time="0.044" classname=".[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed expandedChanged has been called" time="0.044" classname=".[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed headerrow does not have class expanded" time="0.046" classname=".[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed table is collapsed, row is focused and enter is space expandedChanged has been called" time="0.045" classname=".[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed table is collapsed, row is focused and enter is space"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed table is collapsed, row is focused and enter is space headerrow do have class expanded" time="0.05" classname=".[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed table is collapsed, row is focused and enter is space"/>
  <testcase name="[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed table is collapsed, row is focused and enter is space headerrow does not have class collapsed" time="0.045" classname=".[TestTableComponent] When component is initialized with expanded = true table is expanded, row is focused and enter is pressed table is collapsed, row is focused and enter is space"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and initialized with collapsed rows  and a collapsed row is clicked it emits expandedChanged event" time="0.033" classname=".GridComponent When multiple expanded rows is not allowed and initialized with collapsed rows  and a collapsed row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and initialized with collapsed rows  and a collapsed row is clicked it is expanded" time="0.014" classname=".GridComponent When multiple expanded rows is not allowed and initialized with collapsed rows  and a collapsed row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and initialized with collapsed rows  and a collapsed row is clicked all other rows are collapsed" time="0.013" classname=".GridComponent When multiple expanded rows is not allowed and initialized with collapsed rows  and a collapsed row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and it is clicked it is still expanded" time="0.009" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and it is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and it is clicked it emits collapsePrevented event" time="0.008" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and it is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with one expanded and many collapsed rows and a collapsed row is clicked all other rows are collapsed" time="0.015" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with one expanded and many collapsed rows and a collapsed row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with one expanded and many collapsed rows and a collapsed row is clicked it is expanded" time="0.014" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with one expanded and many collapsed rows and a collapsed row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked clicked row is still collapsed" time="0.01" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked clicked row emits an expandPrevented event" time="0.009" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked it is still expanded" time="0.009" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked it emits a collapsePrevented event" time="0.01" classname=".GridComponent When multiple expanded rows is not allowed and is initialized with an expanded row that prevents collapse and another row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows are allowed and is initialized with expanded and collapsed rows and a collapsed row is clicked it is expanded" time="0.016" classname=".GridComponent When multiple expanded rows are allowed and is initialized with expanded and collapsed rows and a collapsed row is clicked"/>
  <testcase name="GridComponent When multiple expanded rows are allowed and is initialized with expanded and collapsed rows and a collapsed row is clicked expanded rows are still expanded" time="0.015" classname=".GridComponent When multiple expanded rows are allowed and is initialized with expanded and collapsed rows and a collapsed row is clicked"/>
  <testcase name="GridComponent When a grid header column is clicked a sortChange event is emitted" time="0.016" classname=".GridComponent When a grid header column is clicked"/>
  <testcase name="GridComponent should create" time="0.008" classname=".GridComponent"/>
  <testcase name="[LockButtonComponent - Angular] When button is unlocked and it is clicked locked status is emitted" time="0.011" classname=".[LockButtonComponent - Angular] When button is unlocked and it is clicked"/>
  <testcase name="[LockButtonComponent - Angular] When button is unlocked and it is clicked it is locked" time="0.005" classname=".[LockButtonComponent - Angular] When button is unlocked and it is clicked"/>
  <testcase name="[LockButtonComponent - Angular] When button is unlocked aria-label is &quot;lås&quot;" time="0.011" classname=".[LockButtonComponent - Angular] When button is unlocked"/>
  <testcase name="[LockButtonComponent - Angular] When button is unlocked it is displayed as unlocked" time="0.005" classname=".[LockButtonComponent - Angular] When button is unlocked"/>
  <testcase name="[LockButtonComponent - Angular] When button is locked and it is clicked it is unlocked" time="0.005" classname=".[LockButtonComponent - Angular] When button is locked and it is clicked"/>
  <testcase name="[LockButtonComponent - Angular] When button is locked and it is clicked locked status is emitted" time="0.004" classname=".[LockButtonComponent - Angular] When button is locked and it is clicked"/>
  <testcase name="[LockButtonComponent - Angular] When button is locked aria-label is &quot;lås upp&quot;" time="0.004" classname=".[LockButtonComponent - Angular] When button is locked"/>
  <testcase name="[LockButtonComponent - Angular] When button is locked it is displayed as locked" time="0.004" classname=".[LockButtonComponent - Angular] When button is locked"/>
  <testcase name="[LockButtonComponent - Angular] When disabled is true and button is clicked locked status is not emitted" time="0.011" classname=".[LockButtonComponent - Angular] When disabled is true and button is clicked"/>
  <testcase name="[LockButtonComponent - Angular] When disabled is true and button is clicked locked status in unchanged" time="0.006" classname=".[LockButtonComponent - Angular] When disabled is true and button is clicked"/>
  <testcase name="[LockButtonComponent - Angular] When disabled is true click does not bubble" time="0.005" classname=".[LockButtonComponent - Angular] When disabled is true"/>
  <testcase name="[LockButtonComponent - Angular] When disabled is true button is displayed as disabled" time="0.004" classname=".[LockButtonComponent - Angular] When disabled is true"/>
  <testcase name="[LockButtonComponent - Angular] When disabled is false click bubbles" time="0.004" classname=".[LockButtonComponent - Angular] When disabled is false"/>
  <testcase name="[LockButtonComponent - Angular] When disabled is false button is displayed as enabled" time="0.004" classname=".[LockButtonComponent - Angular] When disabled is false"/>
  <testcase name="TextareaComponent When initialized with invalid state and textarea has been focused CSS Class validated-input has been applied" time="0.025" classname=".TextareaComponent When initialized with invalid state and textarea has been focused"/>
  <testcase name="TextareaComponent When initialized with invalid state and textarea has been focused and input has been corrected CSS Class validated-input has been applied" time="0.005" classname=".TextareaComponent When initialized with invalid state and textarea has been focused and input has been corrected"/>
  <testcase name="TextareaComponent When initialized with invalid state CSS Class validated-input has been applied" time="0.009" classname=".TextareaComponent When initialized with invalid state"/>
  <testcase name="TextareaComponent should create" time="0.006" classname=".TextareaComponent"/>
  <testcase name="TextareaComponent When textarea has readonly set to true CSS Class readonly is applied" time="0.01" classname=".TextareaComponent When textarea has readonly set to true"/>
  <testcase name="CheckboxComponent WCAG compatibility The checkbox has an accessible label, preferably provided by a visible label associated using aria-labelledby checkbox is associated with the label" time="0.013" classname=".CheckboxComponent WCAG compatibility The checkbox has an accessible label, preferably provided by a visible label associated using aria-labelledby"/>
  <testcase name="CheckboxComponent WCAG compatibility The checkbox has an accessible label, preferably provided by a visible label associated using aria-labelledby checkbox has a label with an id" time="0.006" classname=".CheckboxComponent WCAG compatibility The checkbox has an accessible label, preferably provided by a visible label associated using aria-labelledby"/>
  <testcase name="CheckboxComponent WCAG compatibility When not checked, it has state aria-checked set to false" time="0.004" classname=".CheckboxComponent WCAG compatibility"/>
  <testcase name="CheckboxComponent WCAG compatibility When checked, the checkbox element has state aria-checked set to true" time="0.004" classname=".CheckboxComponent WCAG compatibility"/>
  <testcase name="CheckboxComponent WCAG compatibility The checkbox has role checkbox." time="0.004" classname=".CheckboxComponent WCAG compatibility"/>
  <testcase name="CheckboxComponent When initialized as disabled and checked checkbox is checked" time="0.005" classname=".CheckboxComponent When initialized as disabled and checked"/>
  <testcase name="CheckboxComponent When initialized as disabled and checked checkbox is disabled" time="0.004" classname=".CheckboxComponent When initialized as disabled and checked"/>
  <testcase name="CheckboxComponent When initialized as disabled checkbox is disabled" time="0.005" classname=".CheckboxComponent When initialized as disabled"/>
  <testcase name="CheckboxComponent When initialized as disabled checkbox is not checked" time="0.004" classname=".CheckboxComponent When initialized as disabled"/>
  <testcase name="CheckboxComponent When checkbox is triggered with the ENTER key  checkbox is checked" time="0.011" classname=".CheckboxComponent When checkbox is triggered with the ENTER key "/>
  <testcase name="CheckboxComponent When checkbox is triggered with the ENTER key  checked event is emitted" time="0.005" classname=".CheckboxComponent When checkbox is triggered with the ENTER key "/>
  <testcase name="CheckboxComponent When checkbox is triggered with the SPACE key  checkbox is checked" time="0.006" classname=".CheckboxComponent When checkbox is triggered with the SPACE key "/>
  <testcase name="CheckboxComponent When checkbox is triggered with the SPACE key  checked event is emitted" time="0.004" classname=".CheckboxComponent When checkbox is triggered with the SPACE key "/>
  <testcase name="CheckboxComponent When initialized checkbox is enabled" time="0.005" classname=".CheckboxComponent When initialized"/>
  <testcase name="CheckboxComponent When initialized checkbox is not checked" time="0.004" classname=".CheckboxComponent When initialized"/>
  <testcase name="CheckboxComponent When checkbox is clicked  checkbox is checked" time="0.005" classname=".CheckboxComponent When checkbox is clicked "/>
  <testcase name="CheckboxComponent When checkbox is clicked  And checkbox is clicked again checkbox is unchecked" time="0.005" classname=".CheckboxComponent When checkbox is clicked  And checkbox is clicked again"/>
  <testcase name="CheckboxComponent When checkbox is clicked  And checkbox is clicked again checked event is emitted" time="0.004" classname=".CheckboxComponent When checkbox is clicked  And checkbox is clicked again"/>
  <testcase name="CheckboxComponent When checkbox is clicked  checked event is emitted" time="0.004" classname=".CheckboxComponent When checkbox is clicked "/>
  <testcase name="CheckboxComponent When initialized as checked checkbox is not checked" time="0.005" classname=".CheckboxComponent When initialized as checked"/>
  <testcase name="CheckboxComponent When initialized as checked checkbox is enabled" time="0.006" classname=".CheckboxComponent When initialized as checked"/>
  <testcase name="RingWithTextComponent size is set to small" time="0.01" classname=".RingWithTextComponent"/>
  <testcase name="RingWithTextComponent circle color is set" time="0.007" classname=".RingWithTextComponent"/>
  <testcase name="RingWithTextComponent size is set to large" time="0.005" classname=".RingWithTextComponent"/>
  <testcase name="RingWithTextComponent text should be max two characters long" time="0.005" classname=".RingWithTextComponent"/>
  <testcase name="RingWithTextComponent size is small by default" time="0.007" classname=".RingWithTextComponent"/>
  <testcase name="RingWithTextComponent text color is set" time="0.006" classname=".RingWithTextComponent"/>
  <testcase name="RingWithTextComponent not visible if no text provided" time="0.005" classname=".RingWithTextComponent"/>
  <testcase name="[PageHeaderComponent] Instatiate height is correct" time="0" classname=".[PageHeaderComponent] Instatiate"/>
  <testcase name="[PageHeaderComponent] Instatiate title is correct" time="0.001" classname=".[PageHeaderComponent] Instatiate"/>
  <testcase name="[PageHeaderComponent] ngAfterViewChecked When position is not fixed height is set to zero" time="0" classname=".[PageHeaderComponent] ngAfterViewChecked When position is not fixed"/>
  <testcase name="[PageHeaderComponent] ngAfterViewChecked When position is fixed height is set to offset" time="0.001" classname=".[PageHeaderComponent] ngAfterViewChecked When position is fixed"/>
  <testcase name="[PageHeaderComponent] setHeight When height has changed and emit is true new height is emitted" time="0" classname=".[PageHeaderComponent] setHeight When height has changed and emit is true"/>
  <testcase name="[PageHeaderComponent] setHeight When position is not fixed height is set to zero" time="0" classname=".[PageHeaderComponent] setHeight When position is not fixed"/>
  <testcase name="[PageHeaderComponent] setHeight When position is fixed height is set to offset" time="0" classname=".[PageHeaderComponent] setHeight When position is fixed"/>
  <testcase name="[SearchResultComponent - Angular]  when you have a list with items but no description   should focus on the last item in the list" time="0.016" classname=".[SearchResultComponent - Angular]  when you have a list with items but no description "/>
  <testcase name="[SearchResultComponent - Angular] When component is provided with an empty list   when you press arrow down   it should not change the focusitem since there is no item to focus on" time="0.013" classname=".[SearchResultComponent - Angular] When component is provided with an empty list   when you press arrow down "/>
  <testcase name="[SearchResultComponent - Angular] When component is provided with an empty list  should show a message when no items in result" time="0.017" classname=".[SearchResultComponent - Angular] When component is provided with an empty list "/>
  <testcase name="[SearchResultComponent - Angular] When component is provided with an empty list  should not show the description when it's not provided" time="0.015" classname=".[SearchResultComponent - Angular] When component is provided with an empty list "/>
  <testcase name="[SearchResultComponent - Angular] When component is places outside of wrapper  it should throw an error" time="0.005" classname=".[SearchResultComponent - Angular] When component is places outside of wrapper"/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow up   and then press arrow down   should focus on the first item in the list" time="0.033" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow up   and then press arrow down "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow up   should focus on the last item in the list" time="0.027" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow up "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press enter   when you press arrow up   focusitem should ramin the same" time="0.029" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press enter   when you press arrow up "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press enter   and be closed" time="0.028" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press enter "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press enter   it should trigger the itemClick event" time="0.028" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press enter "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press space   and be closed" time="0.029" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press space "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press space   it should trigger the itemClick event" time="0.027" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow down   and you press space "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press arrow down   should focus on the first item in the list" time="0.026" classname=".[SearchResultComponent - Angular]  testing key event  when you press arrow down "/>
  <testcase name="[SearchResultComponent - Angular]  testing key event  when you press escape  should close the list" time="0.026" classname=".[SearchResultComponent - Angular]  testing key event  when you press escape "/>
  <testcase name="[SearchResultComponent - Angular] When component is initialized with values  should not have more elements then maxItem" time="0.013" classname=".[SearchResultComponent - Angular] When component is initialized with values "/>
  <testcase name="[SearchResultComponent - Angular] When component is initialized with values  should show the description when it's provided" time="0.015" classname=".[SearchResultComponent - Angular] When component is initialized with values "/>
  <testcase name="[SearchResultComponent - Angular] When component is initialized with values  should not show a no items message" time="0.013" classname=".[SearchResultComponent - Angular] When component is initialized with values "/>
  <testcase name="[SearchResultComponent - Angular] When component is initialized with values   and you click outside  should close the list" time="0.014" classname=".[SearchResultComponent - Angular] When component is initialized with values   and you click outside "/>
  <testcase name="[SearchResultComponent - Angular] When component is initialized with values  searchresult has class search-results--open" time="0.014" classname=".[SearchResultComponent - Angular] When component is initialized with values "/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow left key in IE previous Tab-button is focused" time="0.014" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow left key in IE"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow left key previous Tab-button is focused" time="0.009" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow left key"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow up key previous Tab-button is focused" time="0.009" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow up key"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow down in IE next Tab-button is focused" time="0.01" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow down in IE"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow up in IE previous Tab-button is focused" time="0.009" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow up in IE"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow down key next Tab-button is focused" time="0.01" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow down key"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow right key next Tab-button is focused" time="0.009" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow right key"/>
  <testcase name="TabButtonGroupComponent When navigating with keyboard and pressing arrow right key in IE next Tab-button is focused" time="0.009" classname=".TabButtonGroupComponent When navigating with keyboard and pressing arrow right key in IE"/>
  <testcase name="ScrollbarComponent should create" time="0.012" classname=".ScrollbarComponent"/>
  <testcase name="SortArrowComponent should create" time="0" classname=".SortArrowComponent">
    <skipped/>
  </testcase>
  <testcase name="FilterPipe When filtered properties are explicitly selected and an object has an undefined property value and the filter matches a defined property the object is returned" time="0.001" classname=".FilterPipe When filtered properties are explicitly selected and an object has an undefined property value and the filter matches a defined property"/>
  <testcase name="FilterPipe When filtered properties are explicitly selected and an object has an undefined property value and the filter does not match any other property It is not matched by the filter" time="0.003" classname=".FilterPipe When filtered properties are explicitly selected and an object has an undefined property value and the filter does not match any other property"/>
  <testcase name="FilterPipe When filtered properties are explicitly selected filter is only applied to the supplied properties" time="0" classname=".FilterPipe When filtered properties are explicitly selected"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When object has two properties and filter matches one property matching objects are returned" time="0" classname=".FilterPipe When filtering on all string properties of an object When object has two properties and filter matches one property"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When object has two properties and filter matches two properties matching objects are returned" time="0" classname=".FilterPipe When filtering on all string properties of an object When object has two properties and filter matches two properties"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When object has properties of non-string types and filter matches one property matching objects are returned" time="0.002" classname=".FilterPipe When filtering on all string properties of an object When object has properties of non-string types and filter matches one property"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When filter is undefined all objects are returned" time="0" classname=".FilterPipe When filtering on all string properties of an object When filter is undefined"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When filter is empty string all objects are returned" time="0" classname=".FilterPipe When filtering on all string properties of an object When filter is empty string"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When filter mathches nothing no objects are returned" time="0.002" classname=".FilterPipe When filtering on all string properties of an object When filter mathches nothing"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When object has one property and filter matches property matching objects are returned" time="0" classname=".FilterPipe When filtering on all string properties of an object When object has one property and filter matches property"/>
  <testcase name="FilterPipe When filtering on all string properties of an object When object has one property and filter matches property in different casing matching objects are returned" time="0" classname=".FilterPipe When filtering on all string properties of an object When object has one property and filter matches property in different casing"/>
  <testcase name="ScrollToTopComponent should create" time="0.015" classname=".ScrollToTopComponent"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow right key in IE next toggle-button is focused" time="0.013" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow right key in IE"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow up key previous toggle-button is focused" time="0.01" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow up key"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow right key next toggle-button is focused" time="0.008" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow right key"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow up in IE previous toggle-button is focused" time="0.009" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow up in IE"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow down in IE next toggle-button is focused" time="0.009" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow down in IE"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow down key next toggle-button is focused" time="0.009" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow down key"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow left key in IE previous toggle-button is focused" time="0.01" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow left key in IE"/>
  <testcase name="[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow left key previous toggle-button is focused" time="0.013" classname=".[ToggleButtonGroupComponent - Angular] When navigating with keyboard and pressing arrow left key"/>
  <testcase name="[PageComponent] Instatiate pageHeaderHeight is correct" time="0.001" classname=".[PageComponent] Instatiate"/>
  <testcase name="[PageComponent] ngOnInit When page header exists and page header height changes body container is offset" time="0.001" classname=".[PageComponent] ngOnInit When page header exists and page header height changes"/>
  <testcase name="[ExpandableRow] When constructed When showNotificationOnRemove is called notification is set to notify on remove" time="0" classname=".[ExpandableRow] When constructed When showNotificationOnRemove is called"/>
  <testcase name="[ExpandableRow] When constructed wrapped object is stored in preview object" time="0" classname=".[ExpandableRow] When constructed"/>
  <testcase name="[ExpandableRow] When constructed When showNotificationOnCollapse is called notification is set to notify on collapse" time="0" classname=".[ExpandableRow] When constructed When showNotificationOnCollapse is called"/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  component is unlocked" time="0.012" classname=".[SaveCancelComponent - Angular] On initialized with no lock "/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  and save button is clicked a save event is emitted" time="0.007" classname=".[SaveCancelComponent - Angular] On initialized with no lock  and save button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  and save button is clicked component remains unlocked" time="0.006" classname=".[SaveCancelComponent - Angular] On initialized with no lock  and save button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  and save button is clicked no unlock event is emitted" time="0.006" classname=".[SaveCancelComponent - Angular] On initialized with no lock  and save button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  no unlock event is emitted" time="0.006" classname=".[SaveCancelComponent - Angular] On initialized with no lock "/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  lock button is hidden" time="0.005" classname=".[SaveCancelComponent - Angular] On initialized with no lock "/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  and cancel button is clicked component remains unlocked" time="0.008" classname=".[SaveCancelComponent - Angular] On initialized with no lock  and cancel button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  and cancel button is clicked no unlock event is emitted" time="0.006" classname=".[SaveCancelComponent - Angular] On initialized with no lock  and cancel button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] On initialized with no lock  and cancel button is clicked a cancel event is sent" time="0.005" classname=".[SaveCancelComponent - Angular] On initialized with no lock  and cancel button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized lock button is enabled" time="0.006" classname=".[SaveCancelComponent - Angular] When initialized"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked component is unlocked" time="0.006" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked and lock button is clicked component is locked" time="0.014" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked and lock button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked and lock button is clicked a save event is sent" time="0.007" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked and lock button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked lock button is disabled" time="0.008" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked and save button is clicked component is locked" time="0.007" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked and save button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked and save button is clicked a save event is sent" time="0.008" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked and save button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked and cancel button is clicked lock button is locked" time="0.007" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked and cancel button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked and cancel button is clicked a cancel event is sent" time="0.006" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked and cancel button is clicked"/>
  <testcase name="[SaveCancelComponent - Angular] When initialized When unlock button is clicked lock button is disabled" time="0.007" classname=".[SaveCancelComponent - Angular] When initialized When unlock button is clicked"/>
  <testcase name="RadiobuttonGroupComponent No items selected firstItem has tabIndex = 0" time="0.012" classname=".RadiobuttonGroupComponent No items selected"/>
  <testcase name="RadiobuttonGroupComponent No items selected other Items has tabIndex = -1" time="0.006" classname=".RadiobuttonGroupComponent No items selected"/>
  <testcase name="RadiobuttonGroupComponent Horizontal and vertical Vertical vertical should be true" time="0.006" classname=".RadiobuttonGroupComponent Horizontal and vertical Vertical"/>
  <testcase name="RadiobuttonGroupComponent Horizontal and vertical Vertical class &quot;vertical&quot; should be true" time="0.004" classname=".RadiobuttonGroupComponent Horizontal and vertical Vertical"/>
  <testcase name="RadiobuttonGroupComponent Horizontal and vertical Horizontal (default) class &quot;vertical&quot; should be undefined" time="0.005" classname=".RadiobuttonGroupComponent Horizontal and vertical Horizontal (default)"/>
  <testcase name="RadiobuttonGroupComponent Horizontal and vertical Horizontal (default) vertical should be false" time="0.005" classname=".RadiobuttonGroupComponent Horizontal and vertical Horizontal (default)"/>
  <testcase name="RadiobuttonGroupComponent Errorhandling more than one item selected errorActive should be true" time="0.015" classname=".RadiobuttonGroupComponent Errorhandling more than one item selected"/>
  <testcase name="RadiobuttonGroupComponent Errorhandling more than one item selected validationErrorMessage should be &quot;Mer än ett val är aktivt&quot;" time="0.007" classname=".RadiobuttonGroupComponent Errorhandling more than one item selected"/>
  <testcase name="RadiobuttonGroupComponent Errorhandling required but no item selected validationErrorMessage should be &quot;Obligatoriskt&quot;" time="0.007" classname=".RadiobuttonGroupComponent Errorhandling required but no item selected"/>
  <testcase name="RadiobuttonGroupComponent Errorhandling required but no item selected errorActive should be true" time="0.007" classname=".RadiobuttonGroupComponent Errorhandling required but no item selected"/>
  <testcase name="RadiobuttonGroupComponent Errorhandling showValidation is false errorActive should be false" time="0.006" classname=".RadiobuttonGroupComponent Errorhandling showValidation is false"/>
  <testcase name="RadiobuttonGroupComponent Errorhandling showValidation is false validationErrorMessage should be &quot;Obligatoriskt&quot;" time="0.005" classname=".RadiobuttonGroupComponent Errorhandling showValidation is false"/>
  <testcase name="RadiobuttonGroupComponent Item preselected one item is selected" time="0.006" classname=".RadiobuttonGroupComponent Item preselected"/>
  <testcase name="RadiobuttonGroupComponent Item preselected preselected item to be selected" time="0.005" classname=".RadiobuttonGroupComponent Item preselected"/>
  <testcase name="RadiobuttonGroupComponent Item preselected selected item has checked class set" time="0.01" classname=".RadiobuttonGroupComponent Item preselected"/>
  <testcase name="RadiobuttonGroupComponent should create" time="0.005" classname=".RadiobuttonGroupComponent"/>
  <testcase name="RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed and left arrow key is pressed previous option is selected (One), " time="0.015" classname=".RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed and left arrow key is pressed"/>
  <testcase name="RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed and left arrow key is pressed only one option is selected" time="0.014" classname=".RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed and left arrow key is pressed"/>
  <testcase name="RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed only one option is selected" time="0.014" classname=".RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed"/>
  <testcase name="RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed next option is selected (Two)" time="0.012" classname=".RadiobuttonGroupComponent Keyboard navigation and right arrow key is pressed"/>
  <testcase name="RadiobuttonGroupComponent Keyboard navigation the option is  selected" time="0.011" classname=".RadiobuttonGroupComponent Keyboard navigation"/>
  <testcase name="RadiobuttonGroupComponent Instantiate showValidation is true" time="0.006" classname=".RadiobuttonGroupComponent Instantiate"/>
  <testcase name="RadiobuttonGroupComponent Instantiate required is false" time="0.004" classname=".RadiobuttonGroupComponent Instantiate"/>
  <testcase name="RadiobuttonGroupComponent Instantiate validationErrorMessage is &quot;Obligatoriskt&quot;" time="0.014" classname=".RadiobuttonGroupComponent Instantiate"/>
  <testcase name="RadiobuttonGroupComponent Instantiate vertical is false" time="0.005" classname=".RadiobuttonGroupComponent Instantiate"/>
  <system-out>
    <![CDATA[Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) ERROR: 'ERROR', TypeError: event.preventDefault is not a function
TypeError: event.preventDefault is not a function
    at CheckboxGroupComponent.keyDown (http://localhost:9876/_karma_webpack_/main.js:19718:13)
    at SpyStrategy.exec (http://localhost:9876/absoluteC:/Projekt/komponentkartan/node_modules/jasmine-core/lib/jasmine-core/jasmine.js?d118a26331bea463fe0341e88f0ed0e1b4c34ac7:9326:39)
    at SpyStrategyDispatcher.exec (http://localhost:9876/absoluteC:/Projekt/komponentkartan/node_modules/jasmine-core/lib/jasmine-core/jasmine.js?d118a26331bea463fe0341e88f0ed0e1b4c34ac7:8845:23)
    at spy (http://localhost:9876/absoluteC:/Projekt/komponentkartan/node_modules/jasmine-core/lib/jasmine-core/jasmine.js?d118a26331bea463fe0341e88f0ed0e1b4c34ac7:8725:46)
    at http://localhost:9876/absoluteC:/Projekt/komponentkartan/node_modules/jasmine-core/lib/jasmine-core/jasmine.js?d118a26331bea463fe0341e88f0ed0e1b4c34ac7:8698:16
    at CheckboxGroupComponent.wrap1 [as keyDown] (http://localhost:9876/absoluteC:/Projekt/komponentkartan/node_modules/jasmine-core/lib/jasmine-core/jasmine.js?d118a26331bea463fe0341e88f0ed0e1b4c34ac7:8735:20)
    at CheckboxGroupComponent_Template_div_keydown_2_listener (ng:///CheckboxGroupComponent.js:80:22)
    at executeListenerWithErrorHandling (http://localhost:9876/_karma_webpack_/vendor.js:88945:12)
    at HTMLDivElement.wrapListenerIn_markDirtyAndPreventDefault (http://localhost:9876/_karma_webpack_/vendor.js:88989:18)
    at http://localhost:9876/_karma_webpack_/vendor.js:107713:20
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) WARN: 'Komponenten <vgr-radio-group> är utfasad och skall ersättas med <vgr-radiobutton-group>'
,Chrome Headless 99.0.4844.82 (Windows 10) LOG: undefined

]]>
  </system-out>
  <system-err/>
</testsuite>